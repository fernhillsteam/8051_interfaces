C51 COMPILER V9.60.0.0   I2C                                                               07/10/2021 00:12:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE i2c.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\source) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\i2c.lst) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include <reg51.h>
   2          #include "i2c.h"
   3          #include "lcd.h"
   4          #include<intrins.h> 
   5          
   6          
   7          sbit led=P3^5;
   8          sbit led1=P3^6;
   9          sbit sda=P1^0;
  10          sbit scl=P1^1;
  11          bit ack;
  12          sfr output=0x90;
  13          
  14          unsigned char reead,write,write2,i,j,k,l;
  15          unsigned int temp;
  16          
  17          void start()                                          // start condition
  18          {
  19   1        sda=1;
  20   1        scl=1;
  21   1        _nop_();                                      // No operation
  22   1        _nop_();
  23   1        sda=0;
  24   1        scl=0;
  25   1      }
  26          void stop()                                           // stop condition
  27          {
  28   1        sda=0;
  29   1        scl=1;
  30   1        _nop_();
  31   1        _nop_();
  32   1        sda=1;
  33   1        scl=0;
  34   1      }
  35          void aknowledge()                                     // acknowledge condition
  36          {
  37   1        scl=1;
  38   1        _nop_();
  39   1        _nop_();
  40   1        scl=0;
  41   1      }
  42          void send_byte(unsigned char value)                   // send byte serially
  43          {
  44   1        unsigned int i;
  45   1        unsigned char send;
  46   1        send=value;
  47   1        for(i=0;i<8;i++)
  48   1        { 
  49   2          sda=send/128;                         // extracting MSB
  50   2          send=send<<1;                         // shiftng left
  51   2          scl=1;
  52   2          _nop_();
  53   2          _nop_();
  54   2          scl=0;
C51 COMPILER V9.60.0.0   I2C                                                               07/10/2021 00:12:05 PAGE 2   

  55   2        }
  56   1        ack=sda;                                           // reading acknowledge
  57   1        sda=0;
  58   1      }
  59          unsigned char read_byte()                             // reading from EEPROM serially
  60          {
  61   1        unsigned int i;
  62   1        sda=1;
  63   1        reead=0;
  64   1        for(i=0;i<8;i++)
  65   1        {
  66   2          reead=reead<<1;
  67   2          scl=1;
  68   2          _nop_();
  69   2          _nop_();
  70   2          if(sda==1)
  71   2          reead++;
  72   2          scl=0;
  73   2        }
  74   1        sda=0;
  75   1        return reead;                                 // Returns 8 bit data here
  76   1      }
  77          void save()                                           // save in EEPROM
  78          {
  79   1        start();
  80   1        send_byte(0xA0);                              // device address
  81   1        aknowledge();
  82   1        send_byte(0x0000);                            // word address
  83   1        aknowledge();
  84   1        send_byte('F');                               // send data
  85   1        aknowledge();
  86   1        send_byte('E');
  87   1        aknowledge();
  88   1        send_byte('R');
  89   1        aknowledge();
  90   1        send_byte('N');                               // send data
  91   1        aknowledge();
  92   1        send_byte('H');
  93   1        aknowledge();
  94   1        send_byte('I');
  95   1        aknowledge();
  96   1        send_byte('L');       // send data
  97   1        aknowledge(); 
  98   1        send_byte('L');
  99   1        aknowledge();
 100   1        send_byte('S');
 101   1        aknowledge();
 102   1        stop();
 103   1        if(ack==0)
 104   1        {
 105   2          led=0;
 106   2          delay(100);
 107   2          lcd_command(0x86);
 108   2          lcd_data('F');
 109   2          lcd_command(0x87);
 110   2          lcd_data('E');
 111   2          lcd_command(0x88);
 112   2          lcd_data('R');
 113   2          lcd_command(0x89);
 114   2          lcd_data('N');
 115   2          lcd_command(0x8A);
 116   2          lcd_data('H');
C51 COMPILER V9.60.0.0   I2C                                                               07/10/2021 00:12:05 PAGE 3   

 117   2          lcd_command(0x8B);
 118   2          lcd_data('I');
 119   2          lcd_command(0x8C);
 120   2          lcd_data('L');
 121   2          lcd_command(0x8D);
 122   2          lcd_data('L');
 123   2          lcd_command(0x8E);
 124   2          lcd_data('S');
 125   2          led=1;
 126   2          delay(100);
 127   2        }
 128   1        else
 129   1        led1=0;
 130   1        aknowledge();
 131   1      }
 132          
 133          void Read()
 134          {
 135   1        start();
 136   1        send_byte(0xA0);
 137   1        aknowledge();
 138   1        send_byte(0x0000);
 139   1        aknowledge();
 140   1        start();
 141   1        send_byte(0xA1);                              // device address
 142   1        aknowledge();
 143   1        i=read_byte();
 144   1        aknowledge();
 145   1        j=read_byte();
 146   1        aknowledge();
 147   1        k=read_byte();
 148   1        aknowledge();
 149   1        l=read_byte();
 150   1        aknowledge();
 151   1        stop();
 152   1        if(i!=0xff)
 153   1        {
 154   2          led1=0;
 155   2          delay(100);
 156   2          write=i;
 157   2          lcd_command(0xC6);
 158   2          lcd_data(write);
 159   2          write=j;
 160   2          lcd_command(0xC7);
 161   2          lcd_data(write);
 162   2          write=k;
 163   2          lcd_command(0xC8);
 164   2          lcd_data(write);  
 165   2          write=l;
 166   2          lcd_command(0xC9);
 167   2          lcd_data(write);
 168   2          led1=1;
 169   2          delay(100);
 170   2            
 171   2        }
 172   1      }
 173          
 174          void Read_dep()
 175          {
 176   1        start();
 177   1        send_byte(0xA0);
 178   1        aknowledge();
C51 COMPILER V9.60.0.0   I2C                                                               07/10/2021 00:12:05 PAGE 4   

 179   1        send_byte(0x0004);
 180   1        aknowledge();
 181   1        start();
 182   1        send_byte(0xA1);                              // device address
 183   1        aknowledge();
 184   1        i=read_byte();
 185   1        aknowledge();
 186   1        j=read_byte();
 187   1        aknowledge();
 188   1        k=read_byte();
 189   1        aknowledge();
 190   1        l=read_byte();
 191   1        aknowledge();
 192   1        stop();
 193   1        if(i!=0xff)
 194   1        {
 195   2          led1=0;
 196   2          delay(100);
 197   2          write=i;
 198   2          lcd_command(0xC6);
 199   2          lcd_data(write);
 200   2          write=j;
 201   2          lcd_command(0xC7);
 202   2          lcd_data(write);
 203   2          write=k;
 204   2          lcd_command(0xC8);
 205   2          lcd_data(write);
 206   2          write=l;
 207   2          lcd_command(0xC9);
 208   2          lcd_data(write);
 209   2          led1=1;
 210   2          delay(100);         
 211   2        }
 212   1      }
 213          
 214          void Read_session()
 215          {
 216   1        start();
 217   1        send_byte(0xA0);
 218   1        aknowledge();
 219   1        send_byte(0x0002);
 220   1        aknowledge();
 221   1        start();
 222   1        send_byte(0xA1);                              // device address
 223   1        aknowledge();
 224   1        i=read_byte();
 225   1        aknowledge();
 226   1        j=read_byte();
 227   1        aknowledge();
 228   1        k=read_byte();
 229   1        aknowledge();
 230   1        l=read_byte();
 231   1        aknowledge();
 232   1        stop();
 233   1        if(i!=0xff)
 234   1        {
 235   2          led1=0;
 236   2          delay(100);
 237   2          write=i;
 238   2          lcd_command(0xC6);
 239   2          lcd_data(write);
 240   2          write=j;
C51 COMPILER V9.60.0.0   I2C                                                               07/10/2021 00:12:05 PAGE 5   

 241   2          lcd_command(0xC7);
 242   2          lcd_data(write);
 243   2          write=k;
 244   2          lcd_command(0xC8);
 245   2          lcd_data(write);
 246   2          write=l;
 247   2          lcd_command(0xC9);
 248   2          lcd_data(write);
 249   2          led1=1;
 250   2          delay(100); 
 251   2        }
 252   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    630    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
